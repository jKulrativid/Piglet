// this file was generated by Snort rules P4 compiler
// please do not edit
#include <core.p4>
#include <xsa.p4>

typedef bit<48>  MacAddr;
typedef bit<32>  IPv4Addr;

const bit<16> QINQ_TYPE = 0x88A8;
const bit<16> VLAN_TYPE = 0x8100;
const bit<16> IPV4_TYPE = 0x0800;

const bit<8>  TCP_PROT  = 0x06;
const bit<8>  UDP_PROT  = 0x11;

// ********************************************************************** //
// *************************** H E A D E R S  *************************** //
// ********************************************************************** //

header eth_mac_t {
    MacAddr dmac; // Destination MAC address
    MacAddr smac; // Source MAC address
    bit<16> type; // Tag Protocol Identifier
}

header vlan_t {
    bit<3>  pcp;  // Priority code point
    bit<1>  cfi;  // Drop eligible indicator
    bit<12> vid;  // VLAN identifier
    bit<16> tpid; // Tag protocol identifier
}

header ipv4_t {
    bit<4>   version;  // Version (4 for IPv4)
    bit<4>   hdr_len;  // Header length in 32b words
    bit<8>   tos;      // Type of Service
    bit<16>  length;   // Packet length in 32b words
    bit<16>  id;       // Identification
    bit<3>   flags;    // Flags
    bit<13>  offset;   // Fragment offset
    bit<8>   ttl;      // Time to live
    bit<8>   protocol; // Next protocol
    bit<16>  hdr_chk;  // Header checksum
    IPv4Addr src;      // Source address
    IPv4Addr dst;      // Destination address
}

header ipv4_opt_t {
    varbit<320> options; // IPv4 options - length = (ipv4.hdr_len - 5) * 32
}

header tcp_t {
    bit<16> src_port;   // Source port
    bit<16> dst_port;   // Destination port
    bit<32> seqNum;     // Sequence number
    bit<32> ackNum;     // Acknowledgment number
    bit<4>  dataOffset; // Data offset
    bit<6>  resv;       // Offset
    bit<6>  flags;      // Flags
    bit<16> window;     // Window
    bit<16> checksum;   // TCP checksum
    bit<16> urgPtr;     // Urgent pointer
}

header tcp_opt_t {
    varbit<320> options; // TCP options - length = (tcp.dataOffset - 5) * 32
}

header udp_t {
    bit<16> src_port;  // Source port
    bit<16> dst_port;  // Destination port
    bit<16> length;    // UDP length
    bit<16> checksum;  // UDP checksum
}

// ********************************************************************** //
// ************************* S T R U C T U R E S  *********************** //
// ********************************************************************** //

// header structure
struct headers {
    eth_mac_t    eth;
    vlan_t       new_vlan;
    vlan_t       vlan;
    ipv4_t       ipv4;
    ipv4_opt_t   ipv4opt;
    tcp_t        tcp;
    tcp_opt_t    tcpopt;
    udp_t        udp;
}

// User metadata structure
struct metadata {
    bit<1> redirect_path;
}

// User-defined errors 
error {
    InvalidIPpacket,
    InvalidTCPpacket
}

// ********************************************************************** //
// *************************** P A R S E R  ***************************** //
// ********************************************************************** //

parser MyParser(packet_in packet, 
                out headers hdr, 
                inout metadata meta, 
                inout standard_metadata_t smeta) {
    
    state start {
        transition parse_eth;
    }
    
    state parse_eth {
        packet.extract(hdr.eth);
        transition select(hdr.eth.type) {
            VLAN_TYPE : parse_vlan;
            IPV4_TYPE : parse_ipv4;
            default   : accept; 
        }
    }
    
    state parse_vlan {
        packet.extract(hdr.vlan);
        transition select(hdr.vlan.tpid) {
            IPV4_TYPE : parse_ipv4;
            default   : accept; 
        }
    }
    
    state parse_ipv4 {
        packet.extract(hdr.ipv4);
        verify(hdr.ipv4.version == 4 && hdr.ipv4.hdr_len >= 5,
               error.InvalidIPpacket);
        packet.extract(hdr.ipv4opt, (((bit<32>)hdr.ipv4.hdr_len - 5) * 32));
        transition select(hdr.ipv4.protocol) {
            TCP_PROT  : parse_tcp;
            UDP_PROT  : parse_udp;
            default   : accept; 
        }
    }

    state parse_tcp {
        packet.extract(hdr.tcp);
        verify(hdr.tcp.dataOffset >= 5, error.InvalidTCPpacket);
        packet.extract(hdr.tcpopt,(((bit<32>)hdr.tcp.dataOffset - 5) * 32));
        transition accept;
    }
    
    state parse_udp {
        packet.extract(hdr.udp);
        transition accept;
    }
}

// ********************************************************************** //
// **************************  P R O C E S S I N G   ******************** //
// ********************************************************************** //

control MyProcessing(inout headers hdr, 
                     inout metadata meta, 
                     inout standard_metadata_t smeta) {
    
    bool is_safe = true;
    
    action pass_to_safe() {
        meta.redirect_path = 1;
    }

    action pass_to_snort() {
        meta.redirect_path = 0;
    }

    action check_source_ipv4() {
        is_safe = is_safe || (hdr.ipv4.isValid() && hdr.ipv4.src == 0x0a9312c8);
    }

    action check_whitelist() {
        check_source_ipv4();
    }

    action check_ip_rules() {
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
    }

    action check_udp_rules() {
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.src_port == 3344 && hdr.udp.dst_port == 3345);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.src_port == 3345 && hdr.udp.dst_port == 3344);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.src_port == 2140);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 31335);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 31335);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 27444);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 18753);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 20433);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 6838);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 10498);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 10498);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 10498);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.src_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.src_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 53);
is_safe = is_safe && !(hdr.udp.src_port == 19 && hdr.udp.dst_port == 7);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 9);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 518);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 635);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 635);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 635);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 177);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 5632);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 49);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 7);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 32771);
is_safe = is_safe && !(hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 1900);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.dst == 0xffffffff && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.dst == 0xffffffff && hdr.udp.dst_port == 162);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 162);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 162);
is_safe = is_safe && !(hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 7001);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 500);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 35555);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 177);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.src_port == 2002 && hdr.udp.dst_port == 2002);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 1900);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 67);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 67);
is_safe = is_safe && !(hdr.udp.dst_port == 69);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xffffffff && hdr.udp.dst_port == 27155);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 2140);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 3150);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.src_port == 3150);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 4120);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.src_port == 4120);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 1434);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.dst_port == 1434);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 67);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 49);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.src_port == 49);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.src_port == 49);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.udp.src_port == 500 && hdr.udp.dst_port == 500);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 1434);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 1434);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.udp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
    }

    action check_tcp_rules() {
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2589);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 7597);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 20034);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 666);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 6789);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 31785);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 6969);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 666);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 666);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 5714);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 555);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 20432);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 27665);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 27665);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 27665);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 12754);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 12754);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 15104);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 7070);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 7070);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 80);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 2766);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 515);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 515);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 6373);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 9090);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.dst_port == 80);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 1417);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 5631);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 70);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.dst_port == 27374);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.dst_port == 1863);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 23);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 9100);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 32771);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 513);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 513);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 513);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 513);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 513);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 513);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 514);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 514);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 514);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 514);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 513);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 10101);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 31790 && hdr.tcp.dst_port == 31789);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 113);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 80);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 457);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 2301);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 6000);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 6000);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 1812);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 2224);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 4242);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 4321);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 6112);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 3372);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 161);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 162);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 705);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 53);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 3389);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 3389);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 8002);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8888);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8000);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 119);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 79);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 4080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 6004);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 32000);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 22);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 119);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 22);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 22);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 22);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 2533);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 515);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 80);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 22);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 33270);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 9090);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8080);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 443);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 749);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 751);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 749);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 751);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 749);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 751);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 749);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 751);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8888);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 8888);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.dst_port == 1863);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 7100);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 1863);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.src_port == 1863);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.dst_port == 1863);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.dst_port == 1863);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2401);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2401);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2401);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2401);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2401);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 2401);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 1723);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 873);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 111);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803 && hdr.tcp.src_port == 512);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 512);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 512);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 143);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 34012);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 1723);
is_safe = is_safe && !(hdr.tcp.dst_port == 179);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 179);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 139);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 21);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src == 0xc0a83803 && hdr.ipv4.dst != 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 135);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 445);
is_safe = is_safe && !(hdr.ipv4.src != 0xc0a83803 && hdr.ipv4.dst == 0xc0a83803 && hdr.tcp.dst_port == 110);
    }

    apply {
        if (hdr.ipv4.isValid() && hdr.udp.isValid()) {
            check_udp_rules();
        }
        else if (hdr.ipv4.isValid() && hdr.tcp.isValid()) {
            check_tcp_rules();
        }
        else {
            check_ip_rules();
        }

        if (is_safe) {
            pass_to_safe();
        } else {
            pass_to_snort();
        }
    }
} 

// ********************************************************************** //
// ***************************  D E P A R S E R  ************************ //
// ********************************************************************** //

control MyDeparser(packet_out packet, 
                   in headers hdr,
                   inout metadata meta, 
                   inout standard_metadata_t smeta) {
    apply {
        packet.emit(hdr.eth);
        packet.emit(hdr.new_vlan);
        packet.emit(hdr.vlan);
        packet.emit(hdr.ipv4);
        packet.emit(hdr.ipv4opt);
        packet.emit(hdr.tcp);
        packet.emit(hdr.tcpopt);
        packet.emit(hdr.udp);
    }
}

// ********************************************************************** //
// *******************************  M A I N  **************************** //
// ********************************************************************** //

XilinxPipeline(
    MyParser(), 
    MyProcessing(), 
    MyDeparser()
) main;
