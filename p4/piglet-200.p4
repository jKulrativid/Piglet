// this file was generated by Snort rules P4 compiler
// please do not edit
#include <core.p4>
#include <xsa.p4>

typedef bit<48>  MacAddr;
typedef bit<32>  IPv4Addr;

const bit<16> QINQ_TYPE = 0x88A8;
const bit<16> VLAN_TYPE = 0x8100;
const bit<16> IPV4_TYPE = 0x0800;

const bit<8>  TCP_PROT  = 0x06;
const bit<8>  UDP_PROT  = 0x11;

// ********************************************************************** //
// *************************** H E A D E R S  *************************** //
// ********************************************************************** //

header eth_mac_t {
    MacAddr dmac; // Destination MAC address
    MacAddr smac; // Source MAC address
    bit<16> type; // Tag Protocol Identifier
}

header vlan_t {
    bit<3>  pcp;  // Priority code point
    bit<1>  cfi;  // Drop eligible indicator
    bit<12> vid;  // VLAN identifier
    bit<16> tpid; // Tag protocol identifier
}

header ipv4_t {
    bit<4>   version;  // Version (4 for IPv4)
    bit<4>   hdr_len;  // Header length in 32b words
    bit<8>   tos;      // Type of Service
    bit<16>  length;   // Packet length in 32b words
    bit<16>  id;       // Identification
    bit<3>   flags;    // Flags
    bit<13>  offset;   // Fragment offset
    bit<8>   ttl;      // Time to live
    bit<8>   protocol; // Next protocol
    bit<16>  hdr_chk;  // Header checksum
    IPv4Addr src;      // Source address
    IPv4Addr dst;      // Destination address
}

header ipv4_opt_t {
    varbit<320> options; // IPv4 options - length = (ipv4.hdr_len - 5) * 32
}

header tcp_t {
    bit<16> src_port;   // Source port
    bit<16> dst_port;   // Destination port
    bit<32> seqNum;     // Sequence number
    bit<32> ackNum;     // Acknowledgment number
    bit<4>  dataOffset; // Data offset
    bit<6>  resv;       // Offset
    bit<6>  flags;      // Flags
    bit<16> window;     // Window
    bit<16> checksum;   // TCP checksum
    bit<16> urgPtr;     // Urgent pointer
}

header tcp_opt_t {
    varbit<320> options; // TCP options - length = (tcp.dataOffset - 5) * 32
}

header udp_t {
    bit<16> src_port;  // Source port
    bit<16> dst_port;  // Destination port
    bit<16> length;    // UDP length
    bit<16> checksum;  // UDP checksum
}

// ********************************************************************** //
// ************************* S T R U C T U R E S  *********************** //
// ********************************************************************** //

// header structure
struct headers {
    eth_mac_t    eth;
    vlan_t       new_vlan;
    vlan_t       vlan;
    ipv4_t       ipv4;
    ipv4_opt_t   ipv4opt;
    tcp_t        tcp;
    tcp_opt_t    tcpopt;
    udp_t        udp;
}

// User metadata structure
struct metadata {
    bit<1> redirect_path;
}

// User-defined errors 
error {
    InvalidIPpacket,
    InvalidTCPpacket
}

// ********************************************************************** //
// *************************** P A R S E R  ***************************** //
// ********************************************************************** //

parser MyParser(packet_in packet, 
                out headers hdr, 
                inout metadata meta, 
                inout standard_metadata_t smeta) {
    
    state start {
        transition parse_eth;
    }
    
    state parse_eth {
        packet.extract(hdr.eth);
        transition select(hdr.eth.type) {
            VLAN_TYPE : parse_vlan;
            IPV4_TYPE : parse_ipv4;
            default   : accept; 
        }
    }
    
    state parse_vlan {
        packet.extract(hdr.vlan);
        transition select(hdr.vlan.tpid) {
            IPV4_TYPE : parse_ipv4;
            default   : accept; 
        }
    }
    
    state parse_ipv4 {
        packet.extract(hdr.ipv4);
        verify(hdr.ipv4.version == 4 && hdr.ipv4.hdr_len >= 5,
               error.InvalidIPpacket);
        packet.extract(hdr.ipv4opt, (((bit<32>)hdr.ipv4.hdr_len - 5) * 32));
        transition select(hdr.ipv4.protocol) {
            TCP_PROT  : parse_tcp;
            UDP_PROT  : parse_udp;
            default   : accept; 
        }
    }

    state parse_tcp {
        packet.extract(hdr.tcp);
        verify(hdr.tcp.dataOffset >= 5, error.InvalidTCPpacket);
        packet.extract(hdr.tcpopt,(((bit<32>)hdr.tcp.dataOffset - 5) * 32));
        transition accept;
    }
    
    state parse_udp {
        packet.extract(hdr.udp);
        transition accept;
    }
}

// ********************************************************************** //
// **************************  P R O C E S S I N G   ******************** //
// ********************************************************************** //

control MyProcessing(inout headers hdr, 
                     inout metadata meta, 
                     inout standard_metadata_t smeta) {
    
    bool is_safe = true;
    
    action pass_to_safe() {
        meta.redirect_path = 1;
    }

    action pass_to_snort() {
        meta.redirect_path = 0;
    }

    action check_source_ipv4() {
        is_safe = is_safe || (hdr.ipv4.isValid() && hdr.ipv4.src == 0x0a9312c8);
    }

    action check_whitelist() {
        check_source_ipv4();
    }

    action check_ip_rules() {
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000));
    }

    action check_udp_rules() {
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.src == 3344)) && ((hdr.udp.dst == 3345)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.src == 3345)) && ((hdr.udp.dst == 3344)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 2140)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 31335) || (hdr.udp.dst == 35555)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 31335)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 27444)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 18753)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 20433)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 6838)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 10498)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.src == 53)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 53)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 19)) && ((hdr.udp.dst == 7)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 161)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 9)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 518)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 635)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 177)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 69)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 5632)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 111)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst >= 10080 && hdr.udp.dst <= 10081)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 49)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 7)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 32771)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.dst == 69)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 1900)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst >= 161 && hdr.udp.dst <= 162)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 162)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 7001)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 500)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 35555)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.src == 2002)) && ((hdr.udp.dst == 2002)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst >= 1024)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst >= 500)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 67)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 2140)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 3150)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 3150)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 4120)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 4120)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 1434)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.dst == 1434)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 49)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 500)) && ((hdr.udp.dst == 500)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 135)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.udp.src == 4000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 135) || (hdr.udp.dst == 138) || (hdr.udp.dst >= 1024)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.src == 137)) && ((hdr.udp.dst == 137)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.src == 7808)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 7787)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 2048)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.udp.dst == 135) || (hdr.udp.dst >= 1024)));
    }

    action check_tcp_rules() {
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 2589)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 7597)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 12345 && hdr.tcp.dst <= 12346)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 20034)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 666)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 6789)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src >= 1000 && hdr.tcp.src <= 1300)) && ((hdr.tcp.dst == 146)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 31785)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 21)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src >= 30100 && hdr.tcp.src <= 30102)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 6969)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src >= 5401 && hdr.tcp.src <= 5402)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 666)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 5714)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 79)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 555)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 20432)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 27665)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 12754)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 12754)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 15104)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 53)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 7070)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 8080)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 80)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 110)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 139)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 2766)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 515)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 6373)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 9090)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 6666 && hdr.tcp.dst <= 7000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 21)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 80)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 21)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 1417)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 5631)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 70)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 9000 && hdr.tcp.dst <= 9002)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src >= 5631 && hdr.tcp.src <= 5632)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 27374)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 135) || (hdr.tcp.dst == 139) || (hdr.tcp.dst == 445) || (hdr.tcp.dst == 593) || (hdr.tcp.dst >= 1024)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 1863)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst >= 6666 && hdr.tcp.dst <= 7000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 23)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 9100)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 32771 && hdr.tcp.dst <= 34000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 111)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 32771)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 513)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 513)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 514)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 10101)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 31790)) && ((hdr.tcp.dst == 31789)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 113)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 80)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 457)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 2301)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 6000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 1812)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 2224)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 135 && hdr.tcp.dst <= 139)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 4242)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 4321)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst >= 6666 && hdr.tcp.dst <= 7000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 6112)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 3372)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 161)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 162)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 705)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0xff800000) == 0x40f53a00));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 3389)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 8002)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 8888)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 8000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 119)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 4080)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 6004)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 32000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 22)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 6789 && hdr.tcp.dst <= 6790)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 32772 && hdr.tcp.dst <= 34000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 143)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src >= 6666 && hdr.tcp.src <= 7000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 119)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 22)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 2533)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 22)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 33270)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 5800 && hdr.tcp.dst <= 5802)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 443)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 1024)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 749)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 751)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 749)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 751)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 500)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 7100)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 1863)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 2401)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 1723)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 873)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 512)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 512)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 34012)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 179)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 179)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 135)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 445)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 2401)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 1655)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 3535)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 3127 && hdr.tcp.dst <= 3199)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 554)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 3000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 5050)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 5050)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 5101)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.dst == 5100)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src == 5100)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 548)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst >= 7777 && hdr.tcp.dst <= 7778)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 81)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.src >= 6666 && hdr.tcp.src <= 6669)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 4711)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 139)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 445)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 139) || (hdr.tcp.dst == 445)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 20034)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 22222)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 23432)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 23432)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 2000)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 63536)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 42)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 3632)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 1020)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 1020)));
is_safe = is_safe && !(((hdr.ipv4.src & 0xff000000) == 0xc0a80100) && ((hdr.ipv4.dst & 0x0) == 0x00000000) && ((hdr.tcp.src == 5880)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 5880)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 6101)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 31337)));
is_safe = is_safe && !(((hdr.ipv4.src & 0x0) == 0x00000000) && ((hdr.ipv4.dst & 0xff000000) == 0xc0a80100) && ((hdr.tcp.dst == 137)));
    }

    apply {
        if (hdr.ipv4.isValid() && hdr.udp.isValid()) {
            check_udp_rules();
        }
        else if (hdr.ipv4.isValid() && hdr.tcp.isValid()) {
            check_tcp_rules();
        }
        else {
            check_ip_rules();
        }

        if (is_safe) {
            pass_to_safe();
        } else {
            pass_to_snort();
        }
    }
} 

// ********************************************************************** //
// ***************************  D E P A R S E R  ************************ //
// ********************************************************************** //

control MyDeparser(packet_out packet, 
                   in headers hdr,
                   inout metadata meta, 
                   inout standard_metadata_t smeta) {
    apply {
        packet.emit(hdr.eth);
        packet.emit(hdr.new_vlan);
        packet.emit(hdr.vlan);
        packet.emit(hdr.ipv4);
        packet.emit(hdr.ipv4opt);
        packet.emit(hdr.tcp);
        packet.emit(hdr.tcpopt);
        packet.emit(hdr.udp);
    }
}

// ********************************************************************** //
// *******************************  M A I N  **************************** //
// ********************************************************************** //

XilinxPipeline(
    MyParser(), 
    MyProcessing(), 
    MyDeparser()
) main;
